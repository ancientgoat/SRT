project(':service') {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    // apply plugin: 'spring-boot'
    // apply plugin: 'findbugs'
    // apply plugin: 'checkstyle'
    // apply plugin: 'pmd'
    // apply plugin: 'jacoco'
    // apply plugin: 'maven-publish'       // see 'publishing' closure

    dependencies {
        compile project (':util')
        compile project (':dto')

        // compile project (':service')
    }
}

//import org.apache.tools.ant.filters.ReplaceTokens
//buildscript {
//    repositories {
//        mavenCentral()
//        mavenLocal()
//        jcenter()
//    }
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
//    }
//}
////
////
////
//group = "com.premierinc"
//version = "0.0.0-SNAPSHOT"
//
//project(':SRT') {
//    apply plugin: 'java'
//    apply plugin: 'eclipse'
//    apply plugin: 'idea'
//    apply plugin: 'spring-boot'
//    apply plugin: 'findbugs'
//    apply plugin: 'checkstyle'
//    apply plugin: 'pmd'
//    apply plugin: 'jacoco'
//    apply plugin: 'maven-publish'       // see 'publishing' closure
//    dependencies {
//        compile project (':util')
//        compile project (':service')
//    }
//}
////apply plugin: 'java'
////apply plugin: 'eclipse'
////apply plugin: 'idea'
////apply plugin: 'spring-boot'
////apply plugin: 'findbugs'
////apply plugin: 'checkstyle'
////apply plugin: 'pmd'
////apply plugin: 'jacoco'
////apply plugin: 'maven-publish'       // see 'publishing' closure
//
//sourceCompatibility = 1.8
//targetCompatibility = 1.8
//
////
//// This is what the resuliting jar is called 'offer-management-api.1.xx-RELEASE.jar'
////
//mainClassName = "srt"
//
//jar {
//    baseName = 'srt'
//}
//
////
//// Make some javadocs
////
//javadoc {
//    source = sourceSets.main.allJava
//    classpath = configurations.compile
//}
//
////
//// Use the maven repository for the following dependencies.
////
//repositories {
//    mavenCentral()
//    mavenLocal()
//    // maven { url "someUrl" }
//}
//
//dependencies {
//    compile group: "org.springframework.boot", name: "spring-boot-starter-data-rest", version: "1.2.5.RELEASE"
//
//    testCompile group: 'com.h2database', name: 'h2', version: '1.4.187'
//    testCompile group: 'junit', name: 'junit', version: '4.11'
//
//    //    compile("org.springframework.boot:spring-boot-starter-actuator:1.2.5.RELEASE")
//        //    compile group: "org.springframework.boot", name: "spring-boot-starter-data-jpa", version: "1.2.5.RELEASE"
//        //    compile 'com.google.code.gson:gson:2.2.4'
//        //
//        //    compile group: 'commons-cli', name: 'commons-cli', version: '1.3'
//        //    compile group: "org.postgresql", name: "postgresql", version: "9.4-1201-jdbc41"
//
//    //compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: '2.3.2'
//    //compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: '2.4.4'
////    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: '2.5.4'
////
////    testCompile group: 'org.springframework', name: 'spring-test', version: '4.1.6.RELEASE'
////    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
////    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.0.0'
//}
//
////
//// Tweak some things about testing
////
//test {
//    maxParallelForks = 1
//    testLogging.showStandardStreams = true
//}
//
////
//// Checking Code Style
////
//checkstyle {
//    toolVersion = "6.0"
//}

//
// We use the Gradle Wrapper
//
task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

